[project]
name = "uvi"
version = "0.5.0"
description = "A python cookiecutter application to create a new python project that uses uv to manage its dependencies."
authors = [{ name = "Shane Holloman", email = "shaneholloman@gmail.com" }]
readme = "README.md"
keywords = ['cookiecutter', 'template', 'uv']
requires-python = ">=3.10,<4.0"
dependencies = [
  "cookiecutter>=2.6.0",
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Software Development :: Code Generators",
]


[project.urls]
Repository = "https://github.com/shaneholloman/uvi"
Documentation = "https://shaneholloman.github.io/uvi/"
Homepage = "https://shaneholloman.github.io/uvi/"

[dependency-groups]
dev = [
  # "pylint>=3.0.0", # Replaced by Ruff with Pylint-equivalent rules
  "pytest>=8.3.5",
  "pre-commit>=4.1.0",
  "pytest-cookies>=0.7.0",
  "tox-uv>=1.25.0",
  "deptry>=0.23.0",
  "mypy>=1.15.0",
  "pytest-cov>=6.0.0",
  "ruff>=0.9.10",
  "mkdocs-material>=9.6.7",
  "mkdocstrings[python]>=0.29.0",
  "build>=1.2.2.post1",
  "twine>=6.1.0",
]

[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[project.scripts]
uvi = "uvi.cli:main"

[tool.setuptools]
packages = ["uvi"]

[tool.setuptools.package-data]
"uvi" = ["*"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["uvi"]

[tool.mypy]
files = ['uvi']
disallow_untyped_defs = true
disallow_any_unimported = false # Changed to allow untyped imports
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[[tool.mypy.overrides]]
module = ["cookiecutter.*"]
ignore_missing_imports = true

[tool.deptry]
extend_exclude = [
  ".+/test_foo.py",
]

[tool.deptry.per_rule_ignores]
DEP002 = ["cookiecutter"]

[tool.ruff]
target-version = "py310"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
  # flake8-2020
  "YTT",
  # flake8-bandit
  "S",
  # flake8-bugbear
  "B",
  # flake8-builtins
  "A",
  # flake8-comprehensions
  "C4",
  # flake8-debugger
  "T10",
  # flake8-simplify
  "SIM",
  # isort
  "I",
  # mccabe
  "C90",
  # pycodestyle
  "E",
  "W",
  # pyflakes
  "F",
  # pygrep-hooks
  "PGH",
  # pyupgrade
  "UP",
  # ruff
  "RUF",
  # tryceratops
  "TRY",
  # Pylint-equivalent rules (replaces Pylint)
  "PLC", # pylint-convention
  "PLE", # pylint-error
  "PLR", # pylint-refactor
  "PLW", # pylint-warning
]
ignore = [
  # LineTooLong
  "E501",
  # DoNotAssignLambda
  "E731",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S603"]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]
