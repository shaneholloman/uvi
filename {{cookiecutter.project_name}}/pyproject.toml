[project]
name = "{{cookiecutter.project_name}}"
version = "0.0.1"
description = "{{cookiecutter.project_description}}"
authors = [
  { name = "{{cookiecutter.author}}", email = "{{cookiecutter.email}}" },
]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.10,<4.0"
classifiers = [
  "Intended Audience :: Developers",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
Homepage = "https://{{cookiecutter.author_github_handle}}.github.io/{{cookiecutter.project_name}}/"
Repository = "https://github.com/{{cookiecutter.author_github_handle}}/{{cookiecutter.project_name}}"
Documentation = "https://{{cookiecutter.author_github_handle}}.github.io/{{cookiecutter.project_name}}/"

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pre-commit>=4.1.0",
    "tox-uv>=1.25.0",
    {% if cookiecutter.deptry == 'y' %}"deptry>=0.23.0",{% endif %}
    "mypy>=1.15.0",
    {% if cookiecutter.codecov == 'y' %}"pytest-cov>=6.0.0",{% endif %}
    "ruff>=0.9.10",
    {% if cookiecutter.mkdocs == 'y' %}"mkdocs>=1.4.2",
    "mkdocs-material>=9.6.7",
    "mkdocstrings[python]>=0.29.0",{% endif %}
]

[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
py-modules = ["{{cookiecutter.project_slug}}"]

[tool.mypy]
files = ["{{cookiecutter.project_slug}}"]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py310"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
  # flake8-2020
  "YTT",
  # flake8-bandit
  "S",
  # flake8-bugbear
  "B",
  # flake8-builtins
  "A",
  # flake8-comprehensions
  "C4",
  # flake8-debugger
  "T10",
  # flake8-simplify
  "SIM",
  # isort
  "I",
  # mccabe
  "C90",
  # pycodestyle
  "E",
  "W",
  # pyflakes
  "F",
  # pygrep-hooks
  "PGH",
  # pyupgrade
  "UP",
  # ruff
  "RUF",
  # tryceratops
  "TRY",
  # Pylint-equivalent rules
  "PLC",
  "PLE",
  "PLR",
  "PLW",
]
ignore = [
  # LineTooLong
  "E501",
  # DoNotAssignLambda
  "E731",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]


{% if cookiecutter.codecov == "y"-%}
preview = true
[tool.coverage.report]
skip_empty = true

[tool.coverage.run]

{% endif %}
branch = true
source = ["{{cookiecutter.project_slug}}"]
